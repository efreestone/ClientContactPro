/*
 * @author	Elijah Freestone 
 *
 * Project	ClientContactPro
 * 
 * Package	com.elijahfreestone.clientcontactpro
 * 
 * Date		Aug 13, 2014
 */

package com.elijahfreestone.clientcontactpro;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;
import android.util.Log;
import android.widget.BaseAdapter;
import android.widget.SimpleAdapter;

// TODO: Auto-generated Javadoc
/**
 * The Class JSONData.
 */
public class JSONData {
	static String TAG = "JSONData"; 
	static Context myContext;
	static String JSONString;
	static ArrayList<HashMap<String, String>> clientList;
	static ArrayList<HashMap<String, String>> appointmentList; 
	static BaseAdapter clientListAdapter;
	static BaseAdapter appointmentListAdapter;  
	static String myFileName = MainActivity.myFileName;
	static JSONObject allClientsJSONObject;
	static DataManager myDataManager;
	
	/*
	* Display data from file pulls string from locally stored file and creates
	* ArrayList.
	*/
	public static void displayDataFromFile(String JSONString) {  
		Log.i(TAG, "displayDataFromFile called"); 
		myContext = MainActivity.myContext;
		
		String clientName, clientAddress, phoneNumber, emailAddress, contactMethod, basicInfo, nextAppointment, appointmentType;; 
		
		clientList = new ArrayList<HashMap<String, String>>();
		appointmentList = new ArrayList<HashMap<String, String>>();
		JSONObject jsonObject = null;
		JSONArray clientJSONArray = null;    
		 
		try {
			Log.i(TAG, "displayData try");
			//Create Object with string passed in when method called
			jsonObject = new JSONObject(JSONString);
			//Grab array object
			clientJSONArray = jsonObject.getJSONArray("clients");
			int clientsArraySize = clientJSONArray.length();
			Log.i(TAG, "clientsArraySize = " + clientsArraySize);  
			
			for (int i = 0; i < clientsArraySize; i++) {
				clientName = clientJSONArray.getJSONObject(i).getString("clientName");
				//Log.i(TAG, "name = " + clientName);
				clientAddress = clientJSONArray.getJSONObject(i).getString("clientAddress");
				phoneNumber = clientJSONArray.getJSONObject(i).getString("phoneNumber");
				nextAppointment = clientJSONArray.getJSONObject(i).getString("nextAppointment");
				//Log.i(TAG, "next_appointment = " + nextAppointment);
				// phoneNumber, emailAddress, contactMethod, basicInfo, nextAppointment, appointmentType;
				
				//Instantiate Hash Map for array and pass in strings with key/value pairs
				HashMap<String, String> clientDisplayMap = new HashMap<String, String>();
				clientDisplayMap.put("clientName", clientName);
				clientDisplayMap.put("nextAppointment", nextAppointment);
				
				
				//Sort out all entries that contain an appointment
				HashMap<String, String> appointmentDisplayMap = new HashMap<String, String>();
				if (!nextAppointment.equalsIgnoreCase("none")) {
					//Log.i(TAG, "appointmentDisplayMap");
					appointmentDisplayMap.put("nextAppointment", nextAppointment);
					appointmentDisplayMap.put("clientName", clientName); 
					appointmentList.add(appointmentDisplayMap);
				} 
				
				//Add hash maps to array list
				clientList.add(clientDisplayMap);    
				
			}
			
			//Create adapters
			createClientsAdapter();
			createAppointmentsAdapter();

		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			Log.e("displayDataFromFile ERROR", e.getMessage().toString());
		}
	} //displayDataFromFile close
	
	
	/*
	 * getJSONFromFile is called when new clients are created. This grabs the
	 * clients currently saved to the device, which will then be processed into
	 * JSON before the new client added and they are resaved to the device
	 */
	public static JSONObject getJSONFromFile(String stringFromFile){
		JSONObject clientsObjectFromFile; 
		try {
			Log.i(TAG, "getJSONFromFile try");
			clientsObjectFromFile = new JSONObject(stringFromFile);
			Log.i(TAG, "JSONObject: " + clientsObjectFromFile);
			return clientsObjectFromFile;
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			Log.e(TAG, e.getMessage().toString());
		}
		
		return null;
		
		//return clientsObjectFromFile;
	} //getJSONfromFile close	
	
	/* createClientsAdapter createds the adapter for Clients listview */
	static void createClientsAdapter(){
		Log.i(TAG, "Create Client Adapter");
		//Create base adapter and set up with array of clients 
		clientListAdapter = new SimpleAdapter(myContext, clientList,
				R.layout.client_listview_row, new String[] { "clientName",
						"nextAppointment" }, new int[] { R.id.clientName,
						R.id.nextAppointment });

	} //createClientsAdapter close
	
	/* createAppointmentsAdapter createds the adapter for Appointments listview */
	static void createAppointmentsAdapter(){
		Log.i(TAG, "Create Appointment Adapter");
		//Create base adapter and set up with array of appointments 
		appointmentListAdapter = new SimpleAdapter(myContext,
				appointmentList, R.layout.appointment_listview_row, new String[] {
						"nextAppointment", "clientName" }, new int[] {
						R.id.appNextAppointment, R.id.appClientName });

	} //createAppointmentsAdapter close

}
